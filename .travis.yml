language: cpp
sudo: required
dist: trusty
notifications:
    webhooks:
        urls:
            - "https://scalar.vector.im/api/neb/services/hooks/dHJhdmlzLWNpLyU0MFBzaXJ1cyUzQW1hdHJpeC5vcmcvJTIxZG9KWEFCclp5VVBlV0Jmb0ZYJTNBbWF0cml4Lm9yZw"
        on_success: change  # always|never|change
        on_failure: always
        on_start: never
compiler:
    - clang
    - gcc
env:
    - BUILD_TYPE=Release OPENMP=TRUE  EXAMPLES=TRUE
    - BUILD_TYPE=Release OPENMP=FALSE EXAMPLES=TRUE
    - BUILD_TYPE=Debug   OPENMP=FALSE EXAMPLES=FALSE COVERAGE=--coverage
matrix:
    exclude:
        - compiler: clang
          env: BUILD_TYPE=Debug   OPENMP=FALSE EXAMPLES=FALSE COVERAGE=--coverage
        - compiler: clang
          env: BUILD_TYPE=Release OPENMP=TRUE  EXAMPLES=TRUE
before_install:
    - export PATH=/home/travis/miniconda/bin:$PATH
    - ./scripts/install_numpy.sh
    - ./scripts/install_gmsh.sh
    - ./scripts/install_cmake.sh
    - sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
    - sudo apt-get -qq update
    - sudo apt-get install -y g++-6 clang libeigen3-dev libgcc-6-dev libiomp-dev swig3.0 libboost-filesystem1.55-dev libboost-test1.55-dev libboost-mpi1.55-dev libopenblas-dev libmetis-dev libmumps-seq-dev libann-dev libarpack2-dev
    - sudo apt-get install -y lcov curl libglu1-mesa-dev
    - ./scripts/install_boost.sh
before_script:
    - mkdir build
    - cd build
    - BUILD_OPTIONS="-DCMAKE_BUILD_TYPE=$BUILD_TYPE -DENABLE_OPENMP=$OPENMP -DCMAKE_CXX_FLAGS=$COVERAGE -DENABLE_MPI=TRUE"
    - if [[ "$CXX" == "g++" ]]; then CXX=g++-6 cmake $BUILD_OPTIONS ..; fi
    - if [[ "$CXX" == "clang++" ]]; then CXX=clang++ cmake $BUILD_OPTIONS ..; fi
script:
    - make -j2 unit
    - make -j2 && make -j2 integrationtests # need to make python modules before integrationtests
    - if [[ "$EXAMPLES" == "TRUE" ]]; then make -j2 examples; fi
after_success:
    - cd ..
    - ./scripts/upload_coverage.sh
